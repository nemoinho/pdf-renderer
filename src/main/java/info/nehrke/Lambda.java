/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package info.nehrke;

import com.amazonaws.HttpMethod;
import com.amazonaws.services.lambda.runtime.Context;
import com.amazonaws.services.lambda.runtime.RequestStreamHandler;
import com.amazonaws.services.s3.AmazonS3;
import com.amazonaws.services.s3.AmazonS3ClientBuilder;

import java.io.InputStream;
import java.io.OutputStream;
import java.net.URL;
import java.util.Date;

public class Lambda implements RequestStreamHandler {
    private static final AmazonS3 s3Client = AmazonS3ClientBuilder.defaultClient();
    private static final String templateBucket = System.getenv("TEMPLATE_BUCKET");
    private static final String pdfBucket = System.getenv("PDF_BUCKET");

    @Override
    public void handleRequest(InputStream input, OutputStream output, Context context) {
        RequestParser requestParser = new RequestParser(input);
        ResponseWriter responseWriter = new ResponseWriter(output);
        TemplateDescription templateDescription = requestParser.bodyAs(TemplateDescription.class);
        Object x = renderTemplate(templateDescription);
        String pdfKey = savePdf(x);
        URL signedRequest = createSignedRequestFor(pdfKey);
        responseWriter.write(signedRequest);
    }

    private Object renderTemplate(TemplateDescription templateDescription) {
        // TODO implement
        return null;
    }

    private String savePdf(Object o) {
        // TODO implement
        return "";
    }

    private URL createSignedRequestFor(String key) {
        Date expiration = new Date();
        long expTimeMillis = expiration.getTime();
        expTimeMillis += 1000 * 60 * 60;
        expiration.setTime(expTimeMillis);

        return s3Client.generatePresignedUrl(pdfBucket, key, expiration, HttpMethod.PUT);
    }
}
